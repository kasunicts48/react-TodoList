{"version":3,"sources":["Icons/icons8_delete.ico","Icons/icons8_edit_file.ico","Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","value","className","onSubmit","preventDefault","id","Math","floor","random","text","edit","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","key","isComplete","onClick","src","CloseIcon","alt","EditIcon","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f95d34a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icons8_delete.4edfa601.ico\";","export default __webpack_public_path__ + \"static/media/icons8_edit_file.39debcb3.ico\";","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function TodoForm(props) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Update your item\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input edit\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          ></input>\r\n          <button className=\"todo-button edit\">Update</button> \r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          ></input>\r\n          <button className=\"todo-button\">Add Todo</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport CloseIcon from \"../Icons/icons8_delete.ico\";\r\nimport EditIcon from \"../Icons/icons8_edit_file.ico\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nexport default function Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n\r\n  const submitUpdate = value => {\r\n      updateTodo(edit.id, value);\r\n      setEdit({\r\n        id: null,\r\n        value: \"\",\r\n      })\r\n  }\r\n\r\n  if(edit.id ){\r\n      return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return todos.map((todo, key) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={key}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <img\r\n          src={CloseIcon}\r\n          alt=\"\"\r\n          onClick={() => {\r\n            removeTodo(todo.id);\r\n          }}\r\n          className=\"delete-icon\"\r\n        ></img>\r\n        <img\r\n          src={EditIcon}\r\n          alt=\"\"\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className=\"edit-icon\"\r\n        ></img>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n","import React,{useState} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nexport default function TodoList() {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = (todo) => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Whats's the plan today?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n        </div>\r\n    )\r\n} \r\n ","import './App.css';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n     <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}